Large Language Models in Procedural Content Generation for Terrain and Structure Layouts
Introduction
Procedural content generation (PCG) has enabled the realization of large-scale worlds since the early days of video game design. Rogue (1980) popularized dungeon generation through randomization, providing players with nearly endless exploration options. Elite (1984) used PCG algorithms to generate expansive galaxies. More contemporary titles, such as Minecraft (Mojang, 2011) and No Man’s Sky (Hello Games, 2016), demonstrate the scalability of PCG in producing vast and dynamic environments accessible to millions of players.
Historically, PCG techniques have relied on rule-based methods, noise functions, and grammar-based systems to generate environments that balance novelty, playability, and scale (Togelius et al., 2011). These approaches emphasize computational efficiency and structural consistency, but they often do not incorporate narrative coherence into the generation process.
The advent of large language models (LLMs) has given rise to a new paradigm in PCG: LLMs as generative agents. Recent research demonstrates that LLMs can generate content that not only satisfies structural requirements but also integrates narrative context, stylistic cues, and higher-order semantics into procedural workflows (Khalifa et al., 2022). Case studies such as SceneCraft (Kumaran, 2023), an LLM-based level and game generator, highlight how these models can produce playable, narratively aligned environments by coupling natural language descriptions with structural constraints. LLM-centered PCG represents a rapidly expanding field of study. This literature review will focus on two subdomains of this research: terrain generation and structure layout generation.
Terrain Generation with LLMs
Traditional terrain generation systems emphasize topographic realism, often relying on techniques such as fractal noise, Perlin noise, and heightmap-based algorithms to create landscapes that appear natural while remaining computationally efficient (Smelik et al., 2009). These methods excel at producing large-scale plausible environments but are limited in their capacity to integrate narrative or thematic elements into the generative process.
Recent research has explored using LLMs as a translator between story-driven contexts and procedural terrain algorithms. Prompting LLMs with narrative cues—such as story beats, character motivations, or world lore—can yield high-level descriptions of terrain features that are subsequently mapped onto procedural systems for instantiation (Khalifa et al., 2022). While this technique allows the terrain to adapt to evolving story contexts, weaknesses persist: generated descriptions may lack sufficient spatial specificity, leading to ambiguity during instantiation, and results often depend heavily on prompt engineering (Alvarez et al., 2023). Moreover, questions remain about how to evaluate narrative coherence in terrain generation, as standardized frameworks for measuring “story alignment” in PCG are still lacking (Hendrikx et al., 2013).
LLMs have also been used to directly generate terrains in symbolic forms. ASCII-based terrain generation has been demonstrated as a lightweight and interpretable prototyping method (Summerville et al., 2023). This approach allows researchers to rapidly visualize and experiment with structural patterns, but outputs frequently lack global coherence: rivers may terminate abruptly, mountains sometimes appear disconnected from broader geological systems, and resource distributions can defy ecological or gameplay logic (Alvarez et al., 2023). Constraint-guided prompting and hybrid methods—where LLMs are supplemented with topological rules or fine-tuned on structured terrain corpora—show improved viability (Alvarez et al., 2023).
Overall, terrain generation with LLMs presents opportunities to bridge narrative design and spatial realization, but unresolved challenges remain as avenues for future research.
Structure and Layout Generation
LLMs have also been explored in generating layouts for dungeons, towns, and building interiors. Layout generation demands higher spatial coherence with lower affordances relative to large-scale terrain generation, exacerbating the inherent LLM inconsistency issues. When direct layout generation has been attempted, researchers have reported connectivity issues, such as corridors that terminate abruptly or rooms that fail to link together. By contrast, isolated rooms or simple symmetrical layouts are generated with more success (Summerville et al., 2023; Ammanabrolu & Riedl, 2021).
Alternatively, LLMs have been used to propose high-level structural plans, which are then validated or refined by formal grammars or constraint solvers. For example, Karth et al. (2021) describe a system in which LLMs propose coarse spatial arrangements (“a central hall with branching corridors”), which are then formalized using shape grammars and constraint-based refinement to ensure navigability. Other hybrid frameworks use automated validators to enforce properties such as connectivity, symmetry, and accessibility (Alvarez et al., 2023).
Evaluation is an open research question for the layout generators as well, with many studies relying on subjective designer metrics. Standardized metrics that balance novelty, usability, and narrative alignment would greatly benefit this field. Other challenges, such as scaling up or increasing layout complexity, are promising pathways for future research.
Discussion
Narrative alignment and LLM controllability define the double-edged sword of LLM-based PCG. Recent research has demonstrated LLMs’ ability to generate narratively informed content, a capability largely absent in traditional noise-based or grammar-based PCG approaches. Controllability, by contrast, remains a persistent challenge. Unconstrained LLMs can produce outputs that are inconsistent, incoherent, or unplayable. Much of the research effort in LLM-based PCG therefore revolves around constraining or refining raw model outputs into usable game content.
Several strategies have been developed to manage LLM controllability. In many systems, LLMs provide high-level semantic or structural proposals, while symbolic systems such as shape grammars, constraint solvers, or automated validators ensure spatial and functional consistency (Karth et al., 2021; Alvarez et al., 2023). This division of labor leverages LLMs’ creativity while compensating for their lack of formal guarantees. Another approach involves constraint-guided prompting, where prompts are engineered to include explicit structural rules or limitations. For example, in symbolic terrain generation, topological rules embedded into prompts reduce incoherent placements of rivers or mountains (Alvarez et al., 2023). This technique improves results but remains fragile, as minor variations in phrasing can lead to significantly different outcomes.
Direct symbolic generation—such as ASCII terrains or dungeon layouts—offers interpretability and simplicity, making it attractive for prototyping and research (Summerville et al., 2023). However, direct outputs struggle with global coherence and scale. Constrained systems provide stronger guarantees of playability and usability but often at the expense of creative diversity. Hybrid approaches thus represent a trade-off space: the more constraints are imposed, the more structurally reliable the content becomes, but potentially at the cost of novelty.
Gaps and Future Research Directions
Despite promising developments, several gaps remain. First, evaluation metrics for LLM-driven PCG are underdeveloped. Existing studies often rely on subjective judgments of narrative coherence or playability, lacking standardized frameworks for assessing alignment between generated environments and narrative goals (Hendrikx et al., 2013). Developing quantitative metrics—such as connectivity measures for layouts or story–environment alignment scores for terrains—would advance the field significantly.
Second, scalability is an open challenge. Most demonstrations of LLM-driven PCG remain limited to small terrains or simple layouts. Scaling these methods to open-world environments, procedurally generated cities, or multi-level architectural complexes requires advances in both applied constraint architectures and hierarchical generation techniques.
Third, real-time adaptivity remains largely unexplored. Current work typically involves static pre-generation, yet LLMs are uniquely suited to dynamic content generation that responds to player actions and narrative progression in real time. This capability could transform PCG into a mechanism not only for initial world creation but also for ongoing, player-driven narrative adaptation.
Conclusion
LLMs have begun to reshape the landscape of procedural content generation by introducing semantic depth and narrative consistency to terrain and structure generation. While direct ASCII generation remains limited in practical viability, hybrid approaches that combine LLM creativity with constraint-based systems hold promise. Case studies like SceneCraft highlight the potential for LLMs to become central actors in PCG pipelines. Looking forward, addressing scalability, evaluation, and multimodal integration will be key to advancing the field. Should these limitations be addressed, LLMs may help bridge the gap between authored storytelling and procedural generation, offering pathways to more adaptive, narrative-rich virtual worlds.
References
Alvarez, A., Dahlskog, S., & Smith, G. (2023). Controlling large language models for game level generation. Proceedings of the International Conference on the Foundations of Digital Games. https://doi.org/10.1145/3582437.3587175
Ammanabrolu, P., & Riedl, M. O. (2021). Learning knowledge graph-based world models of textual environments. Proceedings of the AAAI Conference on Artificial Intelligence, 35(13), 11577–11585. https://doi.org/10.1609/aaai.v35i13.17436
Hendrikx, M., Meijer, S., Van Der Velden, J., & Iosup, A. (2013). Procedural content generation for games: A survey. ACM Transactions on Multimedia Computing, Communications, and Applications, 9(1), 1–22. https://doi.org/10.1145/2422956.2422957
Karth, I., Smith, G., & Whitehead, J. (2021). Exploring expressive range and level design in procedural layout generation. Proceedings of the International Conference on the Foundations of Digital Games. https://doi.org/10.1145/3472538.3472576
Khalifa, A., Bontrager, P., & Togelius, J. (2022). Procedural content generation through large language models. Proceedings of the IEEE Conference on Games. https://doi.org/10.1109/CoG51982.2022.9893617
Kumaran, V. (2023). SceneCraft: Large language model-based level and game generation. North Carolina State University.
Smelik, R. M., Tutenel, T., de Kraker, K. J., & Bidarra, R. (2009). A survey on procedural modelling for virtual worlds. Computer Graphics Forum, 28(6), 1565–1588. https://doi.org/10.1111/j.1467-8659.2008.01360.x
Summerville, A., Snodgrass, S., & Mateas, M. (2023). Language models as dungeon masters: ASCII-based level design with LLMs. Proceedings of the AAAI Conference on Artificial Intelligence and Interactive Digital Entertainment, 19(1), 272–279. https://doi.org/10.1609/aiide.v19i1.27225
Togelius, J., Yannakakis, G. N., Stanley, K. O., & Browne, C. (2011). Search-based procedural content generation: A taxonomy and survey. IEEE Transactions on Computational Intelligence and AI in Games, 3(3), 172–186. https://doi.org/10.1109/TCIAIG.2011.2148116